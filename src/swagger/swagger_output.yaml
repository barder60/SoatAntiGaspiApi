openapi: 3.0.0
info:
  title: Sample API
  description: API description in Markdown.
  version: 1.0.0
host: localhost:8080
basePath: /
schemes:
  - http
paths:
  /offers:
    get:
      tags:
        - Offers
      summary: Returns a list of offers.
      description: Optional extended description in Markdown.
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Offers"
    post:
      tags:
      - Offers
      summary: Post an Offer.
      description: ""
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/requestBodies/AddOffer"
      responses:
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Offers"
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "500":
          description: Internal Server Error
      security:
      - bearerAuth: []
  "/offer/{id}":
    get:
      tags:
      - Offers
      description: "Get an offer by his ID"
      parameters:
      - $ref: "#/components/parameters/idParam"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Offers"
        "401":
          description: Unauthorized
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
      security:
      - bearerAuth: []
    delete:
      tags:
      - Offers
      description: "Delete an offer by his ID"
      parameters:
      - $ref: "#/components/parameters/idParam"
      responses:
        "204":
          description: No Content
        "401":
          description: Unauthorized
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
      security:
      - bearerAuth: []
  /users:
    get:
      tags:
        - Users
      summary: Returns a list of users.
      description: Optional extended description in Markdown.
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Users"
    post:
      tags:
      - Users
      summary: Post a User.
      description: ""
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/requestBodies/AddUser"
      responses:
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Users"
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "500":
          description: Internal Server Error
      security:
      - bearerAuth: []
  "/user/{id}":
    get:
      tags:
      - Users
      description: "Get a user by his ID"
      parameters:
      - $ref: "#/components/parameters/idParam"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Users"
        "401":
          description: Unauthorized
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
      security:
      - bearerAuth: []
    delete:
      tags:
      - Users
      description: "Delete a user by his ID"
      parameters:
      - $ref: "#/components/parameters/idParam"
      responses:
        "204":
          description: No Content
        "401":
          description: Unauthorized
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
      security:
      - bearerAuth: []                
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  requestBodies:
    AddOffer:
      type: object
      properties:
        title: 
          type: integer
        description:
          type: string
        email:
          type: string
        companyName:
          type: string
        address:
          type: string   
        availability:
          type: string
        expiration: 
          type: string
        status: 
          type: string
    AddUser:
      type: object
      properties:
        username: 
          type: string
        email:
          type: string
        firstName:
          type: string
        lastName:
          type: string
        birthDate:
          type: string   
        password: 
          type: string

  schemas:
    Offers:
      type: object
      properties:
        id: 
          type: string
        title: 
          type: string
        description:
          type: string
        email:
          type: string
        companyName:
          type: string
        address:
          type: string   
        availability:
          type: string
          exemple: "2022/05/23"
        expiration: 
          type: string
          exemple: "2022/05/23"
        status: 
          type: string

    Users:
      type: object
      properties:
        id: 
          type: string
        username: 
          type: string
        email:
          type: string
        firstName:
          type: string
        lastName:
          type: string
        birthDate:
          type: string   
        role:
          type: string
        profilImage: 
          type: string
        password: 
          type: string     
  parameters:
    
    # Path Params
    idParam:
      name: id
      in: path
      required: true
      schema:
        type: string
                    